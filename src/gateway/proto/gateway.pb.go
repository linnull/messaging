// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gateway/proto/gateway.proto

/*
Package gateway is a generated protocol buffer package.

It is generated from these files:
	gateway/proto/gateway.proto

It has these top-level messages:
	EchoRequest
	EchoResponse
*/
package gateway

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EchoRequest struct {
	Msg string `protobuf:"bytes,1,opt,name=msg" json:"msg,omitempty"`
}

func (m *EchoRequest) Reset()                    { *m = EchoRequest{} }
func (m *EchoRequest) String() string            { return proto.CompactTextString(m) }
func (*EchoRequest) ProtoMessage()               {}
func (*EchoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *EchoRequest) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type EchoResponse struct {
	Msg string `protobuf:"bytes,1,opt,name=msg" json:"msg,omitempty"`
}

func (m *EchoResponse) Reset()                    { *m = EchoResponse{} }
func (m *EchoResponse) String() string            { return proto.CompactTextString(m) }
func (*EchoResponse) ProtoMessage()               {}
func (*EchoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *EchoResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*EchoRequest)(nil), "EchoRequest")
	proto.RegisterType((*EchoResponse)(nil), "EchoResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Gateway service

type GatewayClient interface {
	Echo(ctx context.Context, in *EchoRequest, opts ...client.CallOption) (*EchoResponse, error)
}

type gatewayClient struct {
	c           client.Client
	serviceName string
}

func NewGatewayClient(serviceName string, c client.Client) GatewayClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "gateway"
	}
	return &gatewayClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *gatewayClient) Echo(ctx context.Context, in *EchoRequest, opts ...client.CallOption) (*EchoResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Gateway.Echo", in)
	out := new(EchoResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Gateway service

type GatewayHandler interface {
	Echo(context.Context, *EchoRequest, *EchoResponse) error
}

func RegisterGatewayHandler(s server.Server, hdlr GatewayHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Gateway{hdlr}, opts...))
}

type Gateway struct {
	GatewayHandler
}

func (h *Gateway) Echo(ctx context.Context, in *EchoRequest, out *EchoResponse) error {
	return h.GatewayHandler.Echo(ctx, in, out)
}

func init() { proto.RegisterFile("gateway/proto/gateway.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 120 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4e, 0x4f, 0x2c, 0x49,
	0x2d, 0x4f, 0xac, 0xd4, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0xd7, 0x87, 0xf2, 0xf4, 0xc0, 0x3c, 0x25,
	0x79, 0x2e, 0x6e, 0xd7, 0xe4, 0x8c, 0xfc, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x21, 0x01,
	0x2e, 0xe6, 0xdc, 0xe2, 0x74, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x10, 0x53, 0x49, 0x81,
	0x8b, 0x07, 0xa2, 0xa0, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x15, 0x53, 0x85, 0x91, 0x01, 0x17, 0xbb,
	0x3b, 0xc4, 0x4c, 0x21, 0x55, 0x2e, 0x16, 0x90, 0x62, 0x21, 0x1e, 0x3d, 0x24, 0x43, 0xa5, 0x78,
	0xf5, 0x90, 0x4d, 0x50, 0x62, 0x48, 0x62, 0x03, 0xdb, 0x6d, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff,
	0xe2, 0x21, 0x7d, 0x4b, 0x9a, 0x00, 0x00, 0x00,
}
